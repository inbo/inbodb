% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_inboveg_ppa.R
\name{get_inboveg_ppa}
\alias{get_inboveg_ppa}
\title{Query PPA (point-plant distance) information from INBOVEG}
\usage{
get_inboveg_ppa(
  connection,
  survey_name = "\%",
  user_reference = "\%",
  recording_givid = "\%",
  collect = FALSE,
  multiple = FALSE
)
}
\arguments{
\item{connection}{\code{dbconnection} with the database 'Cydonia'
on the \code{inbo-sql07-prd} server}

\item{survey_name}{A character string or a character vector, depending on
multiple parameter, giving the name or names of the survey(s) for which you
want to extract relevé information. As default (\code{survey_name} = "\%") all
surveys
are returned.}

\item{user_reference}{A character string or a character vector giving the
name of a recording for which you want to extract relevé information.
As default (\code{user_reference} = "\%") all user-references are returned.}

\item{recording_givid}{A character string or a character vector giving
the unique id of a recording for which you want to extract relevé
information.
As default (\code{recording_givids} = "\%") all \code{recording_givids} are returned.}

\item{collect}{If FALSE (the default), a remote \code{tbl} object is returned.
This is like a reference to the result of the query but the full result of
the query is not brought into memory. If TRUE the full result of the query is
collected (fetched) from the database and brought into memory of the working
environment.}

\item{multiple}{If TRUE survey_name, \code{user_reference} or \code{recording_givid}
can
take a character vector with multiple survey names, user references or
\code{recording_givids} that must match exactly.
If FALSE (the default) survey_name , \code{user_reference} or \code{recording_givid}
must
be a single character string (one survey name, or one user_reference or one
\code{recording_givid}). Only survey_name can include wildcards to allow partial
matches.}
}
\value{
A remote \code{tbl} object (collect = FALSE) or a \code{tibble} dataframe
(collect = TRUE) with variables
\code{SurveyName},
\code{RecordingGivid},
\code{UserReference},
\code{DateRecording},
\code{LocationCode},
\code{CoordinateRefSystem},
\code{GivenLatitude},
\code{GivenLongitude},
\code{GivenLatitude2},
\code{GivenLongitude2},
\code{MaxSearchEffortUnit},
\code{MaxSearchEffortLabel},
\code{Indirect},
\code{NotSure},
\code{LayerCode},
\code{LayerCover},
\code{OriginalName},
\code{ScientificName},
\code{PhenologyCode},
\code{Distance},
\code{DateIdentification},
\code{RecordTypeName}
}
\description{
This function queries the INBOVEG database for
PPA-type relevé information (which species were recorded at what distance
from a point location) for one or more surveys,
or in combination with the unique ID (\code{recordingGIVID}) or user reference
}
\examples{
\dontrun{
library(inbodb)
con <- connect_inbo_dbase("D0010_00_Cydonia")

# get the recordings from one survey and collect the data
specifieke_survey <- get_inboveg_ppa(con, survey_name =
"LEN_sinusmaaiproject_ppa", collect = TRUE)

# get all recordings from with partial matching, don't collect
partial_match <- get_inboveg_ppa(con, survey_name = "\%LEN\%",
collect = FALSE)

# get recordings from several specific recordinggivid
recording_severalgivids <- get_inboveg_ppa(con,
recording_givid = c("IV2024040411243457","IV2024040411263782"),
multiple = TRUE, collect = TRUE)

# get all PPA-type recordings of all surveys,  don't collect the data
all_ppa <- get_inboveg_ppa(con)

# Close the connection when done
dbDisconnect(con)
rm(con)
}
}
\seealso{
Other inboveg: 
\code{\link{get_inboveg_classification}()},
\code{\link{get_inboveg_header}()},
\code{\link{get_inboveg_layer_cover}()},
\code{\link{get_inboveg_layer_qualifier}()},
\code{\link{get_inboveg_qualifier}()},
\code{\link{get_inboveg_recording}()},
\code{\link{get_inboveg_relation_recording}()},
\code{\link{get_inboveg_survey}()}
}
\concept{inboveg}
