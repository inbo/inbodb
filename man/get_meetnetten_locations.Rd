% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_meetnetten_locations.R
\name{get_meetnetten_locations}
\alias{get_meetnetten_locations}
\title{Query monitoring scheme locations from meetnetten}
\usage{
get_meetnetten_locations(connection, scheme_name = NULL, species_group = NULL)
}
\arguments{
\item{connection}{dbconnection with the database 'S0008_00_Meetnetten'
on the inbo-sql08-prd.inbo.be server}

\item{scheme_name}{the name of the monitoring scheme for which you want to
extract location data. Data from multiple schemes can be selected by providing
a vector with the names of the schemes.}

\item{species_group}{the name of the species group for which you want to
extract location data. Data from multiple species groups can be selected by
providing a vector with the names of the species groups.}
}
\value{
A list with two sf objects:

\itemize{
\item main_locations: the main locations of the selected monitoring schemes
\item sublocations: the sublocations (for example the sections of a transect)
for each of the selected main locations
}

Not all main locations are subdivided in sublocations.
So in some cases the sublocations object is empty.
}
\description{
This function queries the meetnetten database for the locations
for a specified monitoring scheme or for all monitoring schemes within a
specified species group. When no monitoring scheme or species group is
specified, the observations of all monitoring schemes are returned.
}
\examples{
\dontrun{
library(inbodb)
con <- connect_inbo_dbase("S0008_00_Meetnetten")

# get locations for a specific monitoring scheme
locations_treefrog <- get_meetnetten_locations(con,
scheme_name = "Heivlinder")

main_locations <- locations_heivlinder$main_locations
sublocations <- locations_heivlinder$sublocations

# get locations for a specific species_group
locations_dragonflies <- get_meetnetten_locations(con,
species_group = "libellen")

main_locations <- locations_dragonflies$main_locations
sublocations <- locations_dragonflies$sublocations

# Close the connection when done
dbDisconnect(con)
rm(con)
}
}
\seealso{
Other meetnetten: 
\code{\link{get_meetnetten_observations}()},
\code{\link{get_meetnetten_schemes}()},
\code{\link{get_meetnetten_visits}()}
}
\concept{meetnetten}
