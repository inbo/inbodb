% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_meetnetten_visits.R
\name{get_meetnetten_visits}
\alias{get_meetnetten_visits}
\title{Query visit data from Meetnetten}
\usage{
get_meetnetten_visits(
  connection,
  scheme_name = NULL,
  species_group = NULL,
  collect = FALSE
)
}
\arguments{
\item{connection}{dbconnection with the database 'S0008_00_Meetnetten'
on the inbo-sql08-prd.inbo.be server}

\item{scheme_name}{the name of the monitoring scheme for which you want to
extract visit data.}

\item{species_group}{the name of the species group for which you want to
extract visit data.}

\item{collect}{If \code{FALSE} (the default), a remote tbl object is
returned. This is like a reference to the result of the query but the full
result of the query is not brought into memory. If \code{TRUE} the full
result of the query is collected (fetched) from the database and brought
into memory of the working environment.}
}
\value{
A remote \code{tbl} object (\code{collect} = \code{FALSE}) or a
\code{tibble} dataframe (\code{collect} = \code{TRUE}) with following
variables:
\itemize{
\item \code{species_group}
\item \code{scheme}: the name of the monitoring scheme
\item \code{protocol}: the protocol used
\item \code{location}: the name of the location
\item \code{visit_id}: unique id for a count event
\item \code{validation_status}: validation status of the visit (visits
that are validated and not approved are not provided)
\itemize{
\item \code{10}: visit not validated
\item \code{100}: visit validated and approved
}
\item \code{start_date}: the start date of the visit
\item \code{start_time}: the start time of the visit
\item \code{end_date}: the end date of the visit
\item \code{end_time}: the end time of the visit
\item \code{date_created}: the date at which the data was imported in the
database
\item \code{visit_status}: the status of the visit (determined by
the observer) using following categories:
\itemize{
\item \code{conform protocol}: the protocol was applied
\item \code{weersomstandigheden waren ongunstig}: weather conditions
were unfavourable
\item \code{telmethode uit handleiding niet gevolgd}: the protocol was
not applied
\item \code{geen veldwerk mogelijk - locatie ontoegankelijk}: counting
was not possible because the location is inaccessible
\item \code{geen veldwerk mogelijk - locatie is ongeschikt voor de soort}:
counting was not possible because the location is not suitable
for the species
}
\item \code{for_analysis}: whether the data is suited for analysis
(determined by the validator)
\item \code{for_targets}: every year targets are set in terms of the
number of locations that have to be counted per monitoring scheme; when
\code{for_targets} = \code{TRUE} the visit contributes to these targets
\item \code{notes}: notes by the observer
}
}
\description{
This function queries the meetnetten database for visit
data (data about a counting event) for a specified monitoring scheme or
for all monitoring schemes within a specified species group. When no
monitoring scheme or species group is specified, the visits of all monitoring
schemes are returned.
}
\examples{
\dontrun{
library(inbodb)
con <- connect_inbo_dbase("S0008_00_Meetnetten")

# get visits for a specific monitoring scheme and collect data
get_meetnetten_visits(con, scheme_name = "Boomkikker", collect = TRUE)

# get visits for a specific species_group and collect data
get_meetnetten_visits(con, species_group = "libellen", collect = TRUE)

# get visits for all species and do not collect data
visits_all <- get_meetnetten_visits(con)

# Close the connection when done
dbDisconnect(con)
rm(con)
rm(visits_all)
}
}
\seealso{
Other meetnetten: 
\code{\link{get_meetnetten_locations}()},
\code{\link{get_meetnetten_observations}()},
\code{\link{get_meetnetten_schemes}()}
}
\concept{meetnetten}
